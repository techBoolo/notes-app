{"version":3,"sources":["components/Note/index.js","services/notes.js","components/Notification/index.js","App.js","index.js"],"names":["Note","note","handleImportantChange","handleDelete","useState","important","imp","setImp","className","content","type","checked","onChange","ev","target","_id","onClick","url","Notification","notification","status","message","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setNotification","notesToShow","filter","id","find","changedNote","updateUrl","axios","put","then","response","data","noteService","map","n","catch","error","setTimeout","delete","console","log","useEffect","get","onSubmit","preventDefault","post","date","Date","toISOString","Math","random","value","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dfedc21.chunk.js","sourcesContent":["import './style.css'\nimport { useState } from 'react'\nconst Note = ({ note, handleImportantChange, handleDelete }) => {\n  const [ imp, setImp ] = useState(note.important)\n\n  const handleChange = (ev) => {\n    setImp(ev.target.checked)\n    \n    handleImportantChange(note._id)\n  }\n\n  return (\n    <li className='lists'>\n      <p>{note.content}</p>\n      <input \n        type='checkbox' \n        checked={imp} \n        onChange={handleChange} \n      />\n      <button className='btn-del' onClick={() => handleDelete(note._id)}>del</button>\n    </li>\n  );\n};\n\nexport default Note\n","import axios from 'axios'\nconst url =  '/notes'\n\nexport const getAll = () => {\n  return axios.get(url).then(response => response.data)\n}\n\nexport const create = (note) => {\n  const request = axios.post(url, note)\n    return request.then(response => response.data)\n}\n\nexport const update = (id, note) => {\n  let updateUrl = `${url}/${id}`\n  const request = axios.put(updateUrl, note)\n    return request.then(response => {\n      return response.data\n    })\n}\n\nexport const remove = (id) => {\n  let updateUrl = `${url}/${id}`\n  return axios.delete(updateUrl).then(response => response.data)\n}\n","import './style.css'\n\nconst Notification = ({notification}) => {\n  if(notification === null) return null\n  return (\n    <div className={`notification ${notification.status}`}>\n      {notification.message} \n    </div>\n  );\n};\n\nexport default Notification\n","import { useState, useEffect } from 'react'\nimport Note from './components/Note/'\nimport * as noteService from './services/notes.js'\nimport Notification from './components/Notification/'\nimport './App.css'\n\nfunction App() {\n  const [ notes, setNotes ] = useState([])\n  const [ newNote, setNewNote] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ notification, setNotification ] = useState(null)\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n  const handleNoteChange = (ev) => {\n    setNewNote(ev.target.value) \n  }\n  const addNote = (ev) => {\n    ev.preventDefault()\n    const note = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n    noteService\n      .create(note)\n      .then(data => {\n        setNotification({ status: 'success', message: 'note added successfuly'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setNotes([...notes, data ])\n      })\n    setNewNote('')\n  }\n\n  const handleShowAll = (ev) => {\n    setShowAll(ev.target.checked)\n  }\n\n  const handleImportantChange = (id) => {\n    const note = notes.find(note => note._id === id)\n    const changedNote = { ...note, important: !note.important }\n    noteService\n      .update(id, changedNote)\n      .then(data => {\n        setNotes(notes.map(n => n._id !== id ? n : data))\n      })\n      .catch(error => {\n        setNotification({ status: 'error', message: error.message })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setNotes(notes.filter(n => n._id !== id))\n      })\n  }\n\n  const handleDelete = (id) => {\n    noteService\n      .remove(id)\n      .then(data => {\n        setNotes(notes.filter(note => note._id !== id))\n      })\n      .catch(error => {\n        setNotification({ status: 'error', message: error.message })\n        setTimeout(() => {\n          console.log(error);\n          setNotification(null)\n        }, 5000)\n        setNotes(notes.filter(note => note._id !== id))\n      })\n  }\n\n  useEffect(() => {\n     noteService\n      .getAll()\n      .then(data => {\n        setNotes(data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h4>Notes</h4>\n      <Notification notification={notification} />\n      <form onSubmit={addNote} className='newNote-form'>\n        <input className='input-newNote' value={newNote} onChange={handleNoteChange} />\n        <button className='btn-newNote' type='submit'>add</button>\n      </form>\n      <label name='showAll'>\n        <input type='checkbox' checked={showAll} onChange={handleShowAll}/>\n        showAll\n      </label>\n      <ul>\n        { notesToShow.map(note => \n           <Note \n              key={note._id} \n              note={note} \n              handleImportantChange={handleImportantChange} \n              handleDelete={handleDelete}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}